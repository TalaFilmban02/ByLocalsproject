package models;


import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;

public class JournalistMenu {
    public JournalistMenu() {
        Scanner key = new Scanner(System.in);
        boolean exit = false;

        while (!exit)
        {
            System.out.println("**************Welcome ByLocals*********************");
            System.out.println(" Please choose an option:");
            System.out.println("1|  Create content");
            System.out.println("2|  Search content");
            System.out.println("3|  Exit");
            System.out.println("********************************************");
            System.out.print("Enter your choice: ");
            int choice = key.nextInt();
            key.nextLine();

            switch (choice) {
                case 1:
                    createContent();
                    break;
                case 2:
                    new Places();
                case 3:
                    exit = true;
                    break;
                default:
                    System.out.println("Invalid choice!");
            }
        }

        System.out.println("Thank you for using ByLocals. Goodbye!");
    }

    private static void createContent() {
        Scanner key = new Scanner(System.in);
        System.out.println("Please enter the name of the attraction:");
        String name = key.nextLine();

        while (name.trim().isEmpty()) {
             System.out.println("********************************************");
            
            System.out.println("Please enter the name of the attraction. DO NOT LEAVE IT BLANK!");
             System.out.println("********************************************");
            name = key.nextLine();
        }

        while (containsOnlyNumbers(name)) {
             System.out.println("********************************************");
            System.out.println("Please enter a name with text, NOT JUST NUMBERS!");
             System.out.println("********************************************");
            name = key.nextLine();
        }

        String description;
        boolean validDescription = false;
        while (!validDescription) {
            System.out.println("Please enter the description of the attraction (maximum 1000 characters):");
            description = key.nextLine();

            if (description.length() > 1000) {
                System.out.println("********************************************");
                System.out.println("Sorry, you cannot enter more than 1000 characters! Please try again.");
                System.out.println("********************************************");
            } else if (description.trim().isEmpty()) {
                System.out.println("********************************************");
                System.out.println("Please enter text to describe the place. DON'T LEAVE IT EMPTY!");
                System.out.println("********************************************");
            } else if (containsOnlyNumbers(description)) {
                System.out.println("********************************************");
                System.out.println("Please enter a description with text, NOT JUST NUMBERS!");
                System.out.println("********************************************");
            } else {
                validDescription = true;
                System.out.println("Do you want to add pictures? (yes/no)");
                String addPictures = key.nextLine();

                if (addPictures.equalsIgnoreCase("yes")) {
                    String pictureLink;
                    boolean validPictureLink = false;
                    while (!validPictureLink) {
                        System.out.println("Please enter the link of the picture:");
                        pictureLink = key.nextLine();

                        if (pictureLink.trim().isEmpty()) {
                            System.out.println("********************************************");
                            System.out.println("Please enter the link for the picture. DO NOT LEAVE IT BLANK!");
                            System.out.println("********************************************");
                        } else if (containsOnlyNumbers(pictureLink)) {
                            System.out.println("********************************************");
                            System.out.println("Please enter the link for the picture. DO NOT ENTER NUMBERS!");
                            System.out.println("********************************************");
                        } else if (!isLinkFormat(pictureLink)) {
                            System.out.println("********************************************");
                            System.out.println("Please enter a valid link for the picture. DO NOT ENTER WORDS!");
                            System.out.println("********************************************");
                        } else {
                            validPictureLink = true;
                            saveAttraction(name, description, pictureLink);
                        }
                    }
                } else {
                    saveAttraction(name, description, null);
                }

                System.out.println("Attraction created successfully!");
            }
        }
    }

    private static boolean isLinkFormat(String text) {
        
        return text.matches("^(http|https)://.*$");
    }

    private static boolean containsOnlyNumbers(String text) {
        return text.matches("[0-9]+");
    }

    private static void saveAttraction(String name, String description, String pictureLink) {
        try {
            FileWriter fileWriter = new FileWriter("attractions.txt", true);
            BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
            PrintWriter printWriter = new PrintWriter(bufferedWriter);

         
            printWriter.println("Name: " + name);
            printWriter.println("Description: " + description);

            if (pictureLink != null) {
                printWriter.println("Picture: " + pictureLink);
            }

            printWriter.println(); 

            printWriter.close();
            bufferedWriter.close();
            fileWriter.close();
        } catch (IOException e) {
            System.out.println("Error writing to file: " + e.getMessage());
        }
    }
}
