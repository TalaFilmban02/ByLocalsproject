package javaapplication69;


import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class Visitor extends User {
    
    
    private static final List<Visitor> visitorAccounts = new ArrayList<>();

    public Visitor(String username, String password, String mobileNumber, String firstName, String lastName, LocalDate dateOfBirth) {
        super(username, password, mobileNumber, firstName, lastName, dateOfBirth);
    }

    public static Visitor createAccount() {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Enter username: ");
        String username = scanner.nextLine();

        while (!isValidUsername(username) || isUsernameTaken(username)) {
            System.out.println("_____________________________________________________________ ");
            System.out.println("Invalid username or username already taken.\n Please enter a valid username:");
            username = scanner.nextLine();
        }

        System.out.println("Enter password: ");
        String password = scanner.nextLine();

        while (!isValidPassword(password)) {
            System.out.println("_____________________________________________________________ ");
            System.out.println("Invalid password.\n Please enter a password with at least 8 characters and containing at least one uppercase letter, one lowercase letter, and one digit: ");
            password = scanner.nextLine();
        }

        System.out.println("Enter mobile number: ");
        String mobileNumber = scanner.nextLine();

        while (!isValidPhoneNumber(mobileNumber)) {
            System.out.println("Invalid phone number.\n Please enter a valid number that doesn't contain letters: ");
            mobileNumber = scanner.nextLine();
            System.out.println("_____________________________________________________________ ");
        }

        System.out.println("Enter first name: ");
        String firstName = scanner.nextLine();

        while (!isValidName(firstName)) {
            System.out.println("_____________________________________________________________ ");
            System.out.println("Invalid first name.\n Please enter a valid name that doesn't contain numbers: ");
            firstName = scanner.nextLine();
        }

        System.out.println("Enter last name: ");
        String lastName = scanner.nextLine();

        while (!isValidName(lastName)) {
            System.out.println("_____________________________________________________________ ");
            System.out.println("Invalid last name.\n Please enter a valid name that doesn't contain numbers: ");
            lastName = scanner.nextLine();
        }

        System.out.println("Enter date of birth (YYYY-MM-DD): ");
        LocalDate dateOfBirth = LocalDate.parse(scanner.nextLine());
        
        Visitor visitor = new Visitor(username, password, mobileNumber, firstName, lastName, dateOfBirth);

        visitorAccounts.add(visitor);

        System.out.println("Account created successfully!");

        // Return to the home page
        return null;
    }
    
    public static Visitor login() {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("Enter username: ");
            String username = scanner.nextLine();

            System.out.println("Enter password: ");
            String password = scanner.nextLine();

            // Check if username and password match
            Visitor matchedVisitor = findVisitorByUsername(username);
            if (matchedVisitor != null && matchedVisitor.getPassword().equals(password)) {
                System.out.println("Logged in successfully!");

                // Return to the home page
                return null;
            } else {
                System.out.println("Invalid username or password.");
                System.out.println("1. Try again");
                System.out.println("2. Return to the main page");

                int choice = scanner.nextInt();
                scanner.nextLine(); // consume the newline character

                if (choice == 2) {
                    // Return to the main page
                    return null;
                }
            }
        }
    }
    
    private static Visitor findVisitorByUsername(String username) {
        for (Visitor visitor : visitorAccounts) {
            if (visitor.getUsername().equals(username)) {
                return visitor;
            }
        }
        return null;
    }
    
    private static boolean isUsernameTaken(String username) {
        return findVisitorByUsername(username) != null;
    }

    private static boolean isValidUsername(String username) {
        return username.matches(".*[a-zA-Z]+.*");
    }

    private static boolean isValidPassword(String password) {
        return password.matches("(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}");
    }

    private static boolean isValidPhoneNumber(String phoneNumber) {
        return phoneNumber.matches("\\d+");
    }

    private static boolean isValidName(String name) {
        return name.matches("[a-zA-Z]+");
    }
}

